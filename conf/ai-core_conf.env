M = 5
N = 10
L = 12
K = 6

# https://platform.openai.com/docs/pricing
# gpt-4o-mini
# gpt-4o-mini-2024-07-18

# INFO: homogeneous writers require a dict, and heterogeneous writers setup requires a list, however, you can can also trandform a heterogeneous setup to homogeneous setup by provider a list of the same model type, where the list can contain one or more models of the same type. Future version will remove homogeneous setup as a dict. 

# vllm/google/gemma + openai + groq/llama3 + anthropic
# llm_models_info='{"moderator": {"provider":"self-hosted-vllm","ai_model_name":"google/gemma-3-27b-it","version":"0.0.1"}, "classifier": {"provider":"openai", "ai_model_name":"gpt-4o-mini","version":"0.0.1"},"writer":{"provider":"groq","ai_model_name":"llama3-8b-8192","version":"0.0.1"},"curmudgeon":{"provider":"anthropic","ai_model_name":"claude-3-7-sonnet-20250219","version":"0.0.1"}}'


# Heterogeneous Centralized + Heterogeneous decentralized
llm_models_info='{"moderator": {"provider":"openai", "ai_model_name":"gpt-4o-mini","version":"0.0.1"}, "classifier": {"provider":"openai", "ai_model_name":"gpt-4o-mini","version":"0.0.1"}, "writer":[{"provider":"groq","ai_model_name":"llama3-8b-8192","version":"0.0.1"},{"provider":"openai", "ai_model_name":"gpt-4o-mini","version":"0.0.1"},{"provider":"anthropic","ai_model_name":"claude-sonnet-4-20250514","version":"0.0.1"},{"provider":"self-hosted-vllm","ai_model_name":"google/gemma-3-27b-it","version":"0.0.1"}],"curmudgeon":{"provider":"openai", "ai_model_name":"gpt-4o-mini","version":"0.0.1"}}'

allow_repeats_writers_model=false

langchain_api_key=""

groq_api_key=""

openai_api_key=""

anthropic_api_key=""

qgen_model_path="BeIR/query-gen-msmarco-t5-large-v1"

template_llama_="""<|begin_of_text|><|start_header_id|>system<|end_header_id|>{system_message}<|eot_id|><|start_header_id|>user<|end_header_id|>{user_prompt}<|eot_id|><|start_header_id|>assistant<|end_header_id|>"""
template_gemma3_= """<start_of_turn>user{system_message}{user_prompt}<end_of_turn><start_of_turn>model"""
template_openai_="""{system_message}{user_prompt}"""
template_claude_="""<system>{system_message}</system><user>{user_prompt}</user><assistant>"""


compute_device="cuda"

### Curmudgeon strategies ###
# Curmudgeon strategies: "vendi_only", "curmudgeon_only", "curmudgeon_vendi", "random_rejection"
curmudgeon_strategy="curmudgeon_vendi"
rondon_disagreement_probability=0.65

# Vendi base model: "ngram_score", "bert_score", "bge" or "simcse_score"
vendi_base_model="simcse_score"

# or path can be used instead (implemntation supports model tag or model path)
# vendi_base_model_path="ngram_score"
# vendi_base_model_path="BAAI/bge-large-en-v1.5"
# vendi_base_model_path="bert-base-uncased"
vendi_base_model_path="princeton-nlp/unsup-simcse-bert-base-uncased"

# Empirically, SimCSE produces similarity scores in the range of 1 to 2, 
# with 1 indicating perfect similarity, typically observed between a given 
# context and its corresponding concatenated answers:
# relative weighting of diversity (qa) 
alpha_qa=0.5
# relative weighting of alignment (ca)
alpha_ca=0.5
balanced_g_score_threshold=1.2


###### EVAL Params #########
#### Classifier Agent


cross_classifier_agents_params = '[{"provider": "groq", "ai_model_name": "llama3-8b-8192", "version": "0.0.1"},{"provider": "openai", "ai_model_name": "gpt-4o-mini", "version": "0.0.1"},{"provider": "self-hosted-vllm","ai_model_name": "google/gemma-3-27b-it","version": "0.0.1"},{"provider":"anthropic","ai_model_name":"claude-sonnet-4-20250514","version":"0.0.1"}]'
# Claude Sonnet 4	claude-sonnet-4-20250514